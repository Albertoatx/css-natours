/* ANIMATION DEFINITION ********************************************************/
/* For the browser performance is always best to only animate 2 properties: 
   - opacity (0 is invisible)
   - transform

   0%:    at the beginning of our animation
   100%:  at the end of our animation

   For an animation of an HTML element to work we have to specify at least 
   these 2 properties in that element: 
   - animation-name
   - animation-duration

********************************************************************************/
@keyframes moveInLeft {
  0% {
    opacity: 0;
    transform: translateX(-10rem); }
  80% {
    transform: translateX(1rem); }
  100% {
    opacity: 1;
    transform: translateX(0); } }

@keyframes moveInRight {
  0% {
    opacity: 0;
    transform: translateX(10rem); }
  80% {
    transform: translateX(-1rem); }
  100% {
    opacity: 1;
    transform: translateX(0); } }

@keyframes moveInFromBottom {
  0% {
    opacity: 0;
    transform: translateY(9rem); }
  100% {
    opacity: 1;
    transform: translateY(0); } }

/* UNIVERSAL SELECTOR for RESET */
/* Make a simple reset of browser defaults by using the universal selector */
/* 'border-box': include the padding and border in an element's total width and height */
*,
*::after,
*::before {
  margin: 0;
  padding: 0;
  /* box-sizing: border-box; */
  box-sizing: inherit;
  /* box-sizing by default is not inherited, so we force it */ }

/* Set our root font size (1rem will be this root font size)                        
/* DON'T define it in pixels! That will override the browser font size setting
 * that the user can manually change in the settings (for example for bad sight)  
 * By default the browser font size is 16px, if we want 10px (10px / 16px = 0.625)
 */
html {
  font-size: 62.5%; }

body {
  box-sizing: border-box; }

/* Define Font properties at BODY level (all the webpage) */
body {
  font-family: "Lato", sans-serif;
  font-weight: 400;
  line-height: 1.7;
  color: #777;
  padding: 3rem; }

.heading-primary {
  color: white;
  text-transform: uppercase;
  backface-visibility: hidden;
  margin-bottom: 6rem;
  /* heading-primary--main */
  /* heading-primary--sub */ }
  .heading-primary--main {
    display: block;
    font-size: 6rem;
    font-weight: 700;
    letter-spacing: 3.5rem;
    animation-name: moveInLeft;
    animation-duration: 2s;
    animation-timing-function: ease-out;
    /* animation-delay: 0s; */
    /* animation-iteration-count: 3; */ }
  .heading-primary--sub {
    display: block;
    font-size: 2rem;
    font-weight: 400;
    letter-spacing: 1.75rem;
    animation: moveInRight 2s ease-out; }

.heading-secondary {
  font-size: 3.5rem;
  text-transform: uppercase;
  font-weight: 700;
  letter-spacing: 2px;
  display: inline-block;
  background-image: linear-gradient(to right, #7ed56f, #28b485);
  -webkit-background-clip: text;
  background-clip: text;
  color: transparent;
  transition: all .2s; }
  .heading-secondary:hover {
    transform: skewY(-2deg) skewX(15deg) scale(1.1);
    text-shadow: 0.5rem 1rem 2rem rgba(0, 0, 0, 0.2); }

.heading-tertiary {
  font-size: 1.6rem;
  text-transform: uppercase;
  font-weight: 700; }

.paragraph {
  font-size: 1.6rem;
  margin-bottom: 3rem; }

.u-center-text {
  text-align: center; }

.u-margin-bottom-big {
  margin-bottom: 8rem; }

.u-margin-bottom-medium {
  margin-bottom: 4rem; }

.u-margin-bottom-small {
  margin-bottom: 1.5rem; }

.btn {
  /* pseudo-class ':link' will be the initial state */
  /* Add an element that looks exactly like the button that we already have.      
  * The '::after' pseudo element is treated like a child of the 'btn', therefore
  *  height:100% will be the same dimension that the 'btn' (its parent) 
  * This is the initial state                 
  */ }
  .btn:link, .btn:visited {
    text-transform: uppercase;
    text-decoration: none;
    padding: 1.5rem 4rem;
    display: inline-block;
    /* make <a> tag, which is inline, an inline-block */
    border-radius: 10rem;
    transition: all .2s;
    /* animation */
    position: relative;
    font-size: 1.6rem; }
  .btn:hover {
    transform: translateY(-3px);
    /* to move up the button */
    box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.2);
    /* subtle shadow: x, y, blur, color */
    /* make the pseudo button visible when we hover (make it bigger and fade it out) */ }
    .btn:hover::after {
      transform: scaleX(1.4) scaleY(1.6);
      opacity: 0; }
  .btn:active {
    transform: translateY(-1px);
    /* to move up the button */
    box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.2);
    /* less shadow: x, y, blur, color */ }
  .btn--white {
    background-color: #fff;
    color: #777;
    /* .btn--white::after   */ }
    .btn--white::after {
      background-color: #fff;
      color: #777; }
  .btn::after {
    content: '';
    display: inline-block;
    border-radius: 10rem;
    height: 100%;
    width: 100%;
    /* to put it behind our actual button */
    position: absolute;
    top: 0;
    left: 0;
    z-index: -1;
    transition: all .4s;
    /* animation */ }
  .btn--animated {
    animation: moveInFromBottom .5s ease-out .75s;
    animation-fill-mode: backwards; }

/* BTN-TEXT */
.btn-text:link, .btn-text:visited {
  font-size: 1.6rem;
  color: #55c57a;
  display: inline-block;
  /* make <a> tag, which is inline, an inline-block */
  text-decoration: none;
  border-bottom: 1px solid #55c57a;
  padding: 1rem;
  border-radius: .3rem;
  transition: all .2s; }

.btn-text:hover {
  background-image: linear-gradient(to right, #55c57a, #28b485);
  color: #fff;
  box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.2);
  transform: translateY(-2px); }

.btn-text:active {
  box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.2);
  transform: translateY(0px); }

.composition {
  position: relative;
  /* when we hover the composition, then select the composition photos which are not hovered */ }
  .composition__photo {
    width: 55%;
    box-shadow: 0 1rem 4rem rgba(0, 0, 0, 0.4);
    border-radius: 3px;
    position: absolute;
    z-index: 10;
    transition: all .2s;
    outline-offset: 1rem; }
    .composition__photo--pic1 {
      left: 0;
      top: -2rem;
      /* move it upwards */ }
    .composition__photo--pic2 {
      right: 0;
      top: 2rem;
      /* move it downwards */ }
    .composition__photo--pic3 {
      left: 20%;
      top: 10rem;
      /* move it downwards */ }
    .composition__photo:hover {
      transform: scale(1.15) translateY(-0.5rem);
      box-shadow: 0 2.5rem 4rem rgba(0, 0, 0, 0.6);
      z-index: 20;
      outline: 1rem solid #55c57a; }
  .composition:hover .composition__photo:not(:hover) {
    transform: scale(0.9); }

.feature-box {
  background-color: rgba(255, 255, 255, 0.8);
  font-size: 1.5rem;
  padding: 2.5rem;
  text-align: center;
  border-radius: 3px;
  box-shadow: 0 1.5rem 4rem rgba(0, 0, 0, 0.15);
  transition: transform .3s; }
  .feature-box:hover {
    transform: translateY(-1.5rem) scale(1.05); }
  .feature-box__icon {
    font-size: 6rem;
    margin-bottom: .5rem;
    display: inline-block;
    background-image: linear-gradient(to right, #7ed56f, #28b485);
    -webkit-background-clip: text;
    background-clip: text;
    color: transparent; }

.row {
  max-width: 114rem;
  margin: 0 auto;
  /* to center block elements inside of another block element */
  /* select every row except the last one (the last child) */
  /* DRY - select all the elements in which the 'class' attribute starts with 'col-' */ }
  .row:not(:last-child) {
    margin-bottom: 8rem; }
  .row:after {
    content: "";
    display: table;
    clear: both;
    /* clear both floats: so float left and float right */ }
  .row [class^="col-"] {
    float: left; }
    .row [class^="col-"]:not(:last-child) {
      margin-right: 6rem; }
  .row .col-1-of-2 {
    width: calc((100% - 6rem) / 2);
    /* Avoid repeating this for every .col-
    background-color: orangered;
    float: left; // float all these columns to the left

    &:not(:last-child){ // select every column except the last one (the last child)
      margin-right: $gutter-horizontal; 
    }
    */ }
  .row .col-1-of-3 {
    width: calc((100% - 2 * 6rem) / 3); }
  .row .col-2-of-3 {
    width: calc( 2 * ((100% - 2 * 6rem) / 3) + 6rem); }
  .row .col-1-of-4 {
    width: calc((100% - 3 * 6rem) / 4); }
  .row .col-2-of-4 {
    width: calc( 2 * ((100% - 3 * 6rem) / 4) + 6rem); }
  .row .col-3-of-4 {
    width: calc( 3 * ((100% - 3 * 6rem) / 4) + 2 * 6rem); }

/* 95vh: Height of the element to be 95% of the viewport height */
.header {
  height: 95vh;
  background-image: linear-gradient(to right, rgba(126, 213, 111, 0.801), rgba(40, 180, 133, 0.801)), url("../img/hero.jpg");
  background-size: cover;
  background-position: top;
  clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
  position: relative;
  /* top & left position is from 'logo-box' parent element (the .header) */
  /* top & left position is from 'text-box' parent element (the .header) */ }
  .header__logo-box {
    position: absolute;
    top: 4rem;
    left: 4rem; }
  .header__logo {
    height: 3.5rem;
    /* the width will scale accordingly */ }
  .header__text-box {
    position: absolute;
    top: 40%;
    left: 50%;
    transform: translate(-49%, -49%);
    /* in relation to the element itself */
    text-align: center; }

.section-about {
  background-color: #f7f7f7;
  padding: 25rem 0;
  margin-top: -20vh; }

.section-features {
  padding: 20rem 0;
  position: relative;
  margin-top: -15rem;
  transform: skewY(-6deg); }
  .section-features > * {
    transform: skewY(6deg); }
  .section-features::after {
    content: '';
    position: absolute;
    top: 0;
    right: 0;
    left: 0;
    bottom: 0;
    background-image: linear-gradient(to right bottom, rgba(126, 213, 111, 0.801), rgba(40, 180, 133, 0.801)), url("../../img/nat-4.jpg");
    background-size: cover;
    z-index: -1; }
